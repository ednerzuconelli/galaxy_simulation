#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <GL/glut.h>
//#include <cstdlib>

float i = 1.0;
float b = 1.0;


GLuint drawMode = GL_POINTS;


void init()
{
	glClearColor(0.0, 0.0, 0.0, 0.0);

}


void display()
{
	//float x = 0, y = 0;

glClear(GL_COLOR_BUFFER_BIT);
glColor3f(1.0, 0.0, 0.0);
//float i = 2;


glPointSize(i);
glLineWidth(b);

glEnable(GL_POINT_SMOOTH);
glBegin(drawMode);
        int count;
	for (count=0; count<=12; count++)
	{
		//srand(time(NULL));
		int p1 = rand() % 650 + 1;
		int p2 = rand() % 650 + 1;

		
		glVertex2f(p1, p2);
		
	}
glEnd();


glFlush();
}


void reshape(int w, int h)
{
	glViewport(0,0,w,h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0,w,0.0,h);
}


void keyboard (unsigned char key, int x, int y) 
{

	switch(key)
	{
	case 'P':
		i++;
	break;
	case 'p':
		i--;
	break;
	case 'S':
		glShadeModel(GL_SMOOTH);
	break;
	case 'F':
		glShadeModel(GL_FLAT);
	break;
	case '1':
		drawMode = GL_POINTS;
	break;
	case '2':
		drawMode = GL_LINES;
	break;
	case '3':
		drawMode = GL_TRIANGLES;
	break;
	case '4':
		drawMode = GL_QUADS;
	break;
	case '5':
		drawMode = GL_POLYGON;
	break;
	case 'L':
		if (b < 15)
		b++;
	break;
	case 'l':
		if (b > 2)
		b--;	
	break;
	default:
		drawMode = GL_POINTS;

	}

glutPostRedisplay();
    
}


int main(int argc, char *argv[])
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(700, 700);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("test");
	init();
	glutReshapeFunc(reshape);
	glutDisplayFunc(display);
	glutKeyboardFunc(keyboard);//the call for the keyboard function
	glutMainLoop();
	return 0;

}
